<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Terms</key>
	<dict>
		<key>algorithm</key>
		<dict>
			<key>Definition</key>
			<string>算法：一系列用来解决问题的指令或规则。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>算法/右手原则</string>
				<key>Title</key>
				<string>算法</string>
			</dict>
		</dict>
		<key>arithmetic operator</key>
		<dict>
			<key>Definition</key>
			<string>算术运算符：类似于 `+`， `-`， `*`， 或 `/`等用来进行基本数学计算的运算符。</string>
		</dict>
		<key>argument</key>
		<dict>
			<key>Definition</key>
			<string>参数（实际参数）：向一个函数传入的一个或一组实际的值。</string>
		</dict>
		<key>array</key>
		<dict>
			<key>Definition</key>
			<string>数组：用来存储一组有序的相同类型数据的集合类型，其中每个元素可以出现多次。</string>
		</dict>
		<key>array out of bounds error</key>
		<dict>
			<key>Definition</key>
			<string>数组越界错误：当尝试用超过数组元素数量的索引访问数组时，便会产生数组越界错误。</string>
		</dict>
		<key>assignment</key>
		<dict>
			<key>Definition</key>
			<string>赋值：对一个常量或变量设置一个值的过程。</string>
		</dict>
		<key>assignment operator</key>
		<dict>
			<key>Definition</key>
			<string>赋值运算符：用 `=` 来给一个变量赋值。</string>
		</dict>
		<key>Boolean</key>
		<dict>
			<key>Definition</key>
			<string>布尔：一种值要么是 `true` 要么是 `false` 的数据类型。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/用条件爬山</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>bug</key>
		<dict>
			<key>Definition</key>
			<string>阻止程序按预期正确运行的代码错误。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>命令/调试</string>
				<key>Title</key>
				<string>命令</string>
			</dict>
		</dict>
		<key>call</key>
		<dict>
			<key>Definition</key>
			<string>调用：告诉程序要执行某个函数。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>函数/创建新函数</string>
				<key>Title</key>
				<string>函数</string>
			</dict>
		</dict>
		<key>coding</key>
		<dict>
			<key>Definition</key>
			<string>编程：通过组合使用命令、数据结构、算法来创建计算机程序的行为。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>命令/简介</string>
				<key>Title</key>
				<string>命令</string>
			</dict>
		</dict>
		<key>command</key>
		<dict>
			<key>Definition</key>
			<string>命令：告诉应用应该执行某个行为的代码。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>命令/命令入门</string>
				<key>Title</key>
				<string>命令</string>
			</dict>
		</dict>
		<key>comparison operator</key>
		<dict>
			<key>Definition</key>
			<string>比较运算符：类似于 `==`， `!=`， `&lt;`， `&gt;`， `&lt;=`，或者 `&gt;=`，用来比较两个值大小的运算符。比较运算符常被用于 `if` 语句或 `while` 循环中，其结果是一个布尔值。</string>
		</dict>
		<key>composition</key>
		<dict>
			<key>Definition</key>
			<string>组合：将多个小组件结合起来解决更大的问题的过程。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>函数/构思一系列行为</string>
				<key>Title</key>
				<string>函数</string>
			</dict>
		</dict>
		<key>compound assignment operator</key>
		<dict>
			<key>Definition</key>
			<string>组合赋值运算符：组合了某个运算（比如加法、减法等）和赋值的运算符。</string>
		</dict>
		<key>conditional code</key>
		<dict>
			<key>Definition</key>
			<string>条件代码：只在满足特定条件才运行的代码。`if` 语句和 `while` 循环都包含条件代码，只有当条件判断为 `true` 的时候才运行。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/简介</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>constant</key>
		<dict>
			<key>Definition</key>
			<string>常量：一旦赋值就无法再改变的量。</string>
		</dict>
		<key>debug</key>
		<dict>
			<key>Definition</key>
			<string>调试：找到并修复会阻止程序正确运行的错误代码。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>命令/调试</string>
				<key>Title</key>
				<string>命令</string>
			</dict>
		</dict>
		<key>declaration</key>
		<dict>
			<key>Definition</key>
			<string>声明：表示将要创建一个类似于函数、变量、或自定义类型的代码。</string>
		</dict>
		<key>decomposition</key>
		<dict>
			<key>Definition</key>
			<string>分解：将一个大问题拆分成许多小问题的过程。 </string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>函数/内部模式</string>
				<key>Title</key>
				<string>函数</string>
			</dict>
		</dict>
		<key>define</key>
		<dict>
			<key>Definition</key>
			<string>定义：显式的为一个新创建的函数、变量或自定义类型提供一个值或行为。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>函数/创建新函数</string>
				<key>Title</key>
				<string>函数</string>
			</dict>
		</dict>
		<key>dot notation</key>
		<dict>
			<key>Definition</key>
			<string>点符号：访问一个实例的属性或方法的语法格式。</string>
		</dict>
		<key>else block</key>
		<dict>
			<key>Definition</key>
			<string>else 块：在 `if` 语句中，若之前所有条件都不满足，则运行 `else` 块中的内容。 </string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/简介</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>else if block</key>
		<dict>
			<key>Definition</key>
			<string>else if 块：在 `if` 语句中，之前的条件都不满足，则会检查这个 else if 的条件，在满足条件后运行 `else if` 块中的内容。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/使用%20else</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>enumeration</key>
		<dict>
			<key>Definition</key>
			<string>枚举：定义了一组唯一但相关的值的集合的数据类型。</string>
		</dict>
		<key>for loop</key>
		<dict>
			<key>Definition</key>
			<string>for 循环：重复执行固定次数的代码段。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>for%20循环/使用循环</string>
				<key>Title</key>
				<string>for 循环</string>
			</dict>
		</dict>
		<key>function</key>
		<dict>
			<key>Definition</key>
			<string>函数：被命名的一组命令的集合，以便在需要的时候调用。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>函数/创建新函数</string>
				<key>Title</key>
				<string>函数</string>
			</dict>
		</dict>
		<key>if block</key>
		<dict>
			<key>Definition</key>
			<string>if 块：在 `if` 语句中，如果满足了条件则会运行 `if` 块中的内容。 </string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/检查开关状态</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>if statement</key>
		<dict>
			<key>Definition</key>
			<string>if 语句：一个基于一系列条件来判断运行那一段内容的代码结构。`if` 语句应以 `if` 块开头，并可能还会有其他的块，比如 `else` 块和 `else if` 块。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/检查开关状态</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>index</key>
		<dict>
			<key>Definition</key>
			<string>索引：某个元素在数组中的位置。</string>
		</dict>
		<key>initialization</key>
		<dict>
			<key>Definition</key>
			<string>初始化：创建一个类型的新实例，并为其所有属性赋初始值的行为。</string>
		</dict>
		<key>inner loop</key>
		<dict>
			<key>Definition</key>
			<string>内层循环：包含在其他循环内的循环语句。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>while%20循环/嵌套循环</string>
				<key>Title</key>
				<string>while 循环</string>
			</dict>
		</dict>
		<key>instance</key>
		<dict>
			<key>Definition</key>
			<string>实例：某个类型的一个具体对象。</string>
		</dict>
		<key>Int</key>
		<dict>
			<key>Definition</key>
			<string>整型：表示整数的数据类型。</string>
		</dict>
		<key>iteration</key>
		<dict>
			<key>Definition</key>
			<string>迭代：对集合内每一个元素都重复执行一个过程的行为。</string>
		</dict>
		<key>local variable</key>
		<dict>
			<key>Definition</key>
			<string>局部变量：在函数内、循环内、或者其他语句块中定义的变量。局部变量不能在其被定义的语句块外被访问。</string>
		</dict>
		<key>logical operator</key>
		<dict>
			<key>Definition</key>
			<string>逻辑运算符：类似 `&amp;&amp;`， `||`或者 `!` 用来进行布尔运算的运算符。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>逻辑运算/逻辑非</string>
				<key>Title</key>
				<string>逻辑运算</string>
			</dict>
		</dict>
		<key>logical AND operator</key>
		<dict>
			<key>Definition</key>
			<string>逻辑与运算符：`&amp;&amp;` 用来对两个布尔值进行与运算，只有两个值均为 `true` 时，结果才为 `true`。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>逻辑运算/逻辑与</string>
				<key>Title</key>
				<string>逻辑运算</string>
			</dict>
		</dict>
		<key>logical NOT operator</key>
		<dict>
			<key>Definition</key>
			<string>逻辑非运算符：`!`用来对一个布尔值进行非运算，结果即为取反。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>逻辑运算/逻辑非</string>
				<key>Title</key>
				<string>逻辑运算</string>
			</dict>
		</dict>
		<key>logical OR operator</key>
		<dict>
			<key>Definition</key>
			<string>逻辑或运算符：`||` 用来对两个布尔值进行与运算，只有两个值均为 `false` 时，结果才为 `false`。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>逻辑运算/逻辑或</string>
				<key>Title</key>
				<string>逻辑运算</string>
			</dict>
		</dict>
		<key>loop</key>
		<dict>
			<key>Definition</key>
			<string>循环：一段重复运行指定次数（例如 `for` 循环）或者重复运行知道条件不再满足为止（例如 `while` 循环）的代码块。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>for%20循环/使用循环</string>
				<key>Title</key>
				<string>for 循环</string>
			</dict>
		</dict>
		<key>method</key>
		<dict>
			<key>Definition</key>
			<string>方法：在一个类型内部定义的函数。</string>
		</dict>
		<key>nest</key>
		<dict>
			<key>Definition</key>
			<string>内部：将一个代码段放在另一个代码段里面。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>while%20循环/嵌套循环</string>
				<key>Title</key>
				<string>while 循环</string>
			</dict>
		</dict>
		<key>operator</key>
		<dict>
			<key>Definition</key>
			<string>运算符：对一个或多个值的某种行为。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>逻辑运算/逻辑非</string>
				<key>Title</key>
				<string>逻辑运算</string>
			</dict>
		</dict>
		<key>outer loop</key>
		<dict>
			<key>Definition</key>
			<string>外层循环：包含了其他循环的循环语句。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>while%20循环/嵌套循环</string>
				<key>Title</key>
				<string>while 循环</string>
			</dict>
		</dict>
		<key>parameter</key>
		<dict>
			<key>Definition</key>
			<string>参数（形式参数）：定义函数时，对等待传入参数的值的命名。</string>
		</dict>
		<key>pattern</key>
		<dict>
			<key>Definition</key>
			<string>模式：可重复利用的环境和数据。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>函数/收集，转换，重复</string>
				<key>Title</key>
				<string>函数</string>
			</dict>
		</dict>
		<key>property</key>
		<dict>
			<key>Definition</key>
			<string>属性：在一个类型内部定义的变量。</string>
		</dict>
		<key>pseudocode</key>
		<dict>
			<key>Definition</key>
			<string>伪代码：方便人类阅读的算法描述。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>算法/右手原则</string>
				<key>Title</key>
				<string>算法</string>
			</dict>
		</dict>
		<key>reusability</key>
		<dict>
			<key>Definition</key>
			<string>可重用性：可以在程序内多次使用的代码的特点。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>函数/探索整个地图</string>
				<key>Title</key>
				<string>函数</string>
			</dict>
		</dict>
		<key>state</key>
		<dict>
			<key>Definition</key>
			<string>状态：给定时刻一个变量、程序或系统的即时信息。</string>
		</dict>
		<key>statement</key>
		<dict>
			<key>Definition</key>
			<string>语句：程序内有规则的组织代码的结构。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/检查开关状态</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>String</key>
		<dict>
			<key>Definition</key>
			<string>字符串：用来存储和表示一系列字符的数据结构。</string>
		</dict>
		<key>Swift</key>
		<dict>
			<key>Definition</key>
			<string>苹果公司开发的编程语言，可以用其开发 iPhone, iPad, Mac, Apple Watch, 以及 Apple TV 各种平台上的应用。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>命令/简介</string>
				<key>Title</key>
				<string>命令</string>
			</dict>
		</dict>
		<key>syntax</key>
		<dict>
			<key>Definition</key>
			<string>语法：编写能让计算机读懂并运行的代码的规则。</string>
		</dict>
		<key>type</key>
		<dict>
			<key>Definition</key>
			<string>类型：包含有一组属性（特性）和方法（行为）的数据结构。</string>
		</dict>
		<key>variable</key>
		<dict>
			<key>Definition</key>
			<string>变量：初次赋值后还可以再改变其值。</string>
		</dict>
		<key>wireframe</key>
		<dict>
			<key>Definition</key>
			<string>线框：这里用来表示地图上可能出现的随机元素。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>条件/循环条件</string>
				<key>Title</key>
				<string>条件</string>
			</dict>
		</dict>
		<key>while loop</key>
		<dict>
			<key>Definition</key>
			<string>while 循环：只要给定条件为 `true`，则始终重复运行的一段代码。而当条件为 `false`时，停止循环。</string>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string>while%20循环/简介</string>
				<key>Title</key>
				<string>while 循环</string>
			</dict>
		</dict>
	</dict>
</dict>
</plist>
